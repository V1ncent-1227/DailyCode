package main

import (
	"bufio"
	"fmt"
	"io/ioutil"
	"net/http"
	"os"
	"time"
)

var (
	urlFile = "url.txt"
	resultsFile = "results.txt"
	googleUrl = "https://transparencyreport.google.com/transparencyreport/api/v3/safebrowsing/status?site="
)

func getUrlFromFile( filename string ) ([]string) {
	file, err := os.Open(urlFile)
	if err != nil{
		panic(err)
	}
	defer file.Close()
	fs := bufio.NewScanner(file)
	var urls []string
	for fs.Scan() {
		url := fs.Text()
		if url != "" {
			urls = append(urls, url)
		}
	}
	return urls
}

func sendRequests(url string) (string) {
	res, err := http.Get(googleUrl + url)
	if err != nil{
		panic(err)
	}
	resp, err := ioutil.ReadAll(res.Body)
	res.Body.Close()
	if err != nil {
		panic(err)
	}
	return string(resp)
}

func writeResult(result string) {
	fmt.Println(result)
	result = result[8:]
	result = result[:len(result)-3]
	f, err := os.OpenFile(resultsFile, os.O_CREATE|os.O_WRONLY|os.O_APPEND, 0666)
	if err != nil {
		panic(err)
	}
	defer f.Close()
	str := fmt.Sprintf("%s\n", result)
	if _, err := f.WriteString(str); err != nil {
		if err := f.Close(); err != nil {
			fmt.Println("*Error*")
			fmt.Println(result)
			panic(err)
		}
	}
}

func main()  {
	//read url from url.txt
	urls := getUrlFromFile(urlFile)
	//send request to google
	for i, url := range urls {
		fmt.Println(i, url)
		//send
		result := sendRequests(url)
		//write results to results.txt
		writeResult(result)
		time.Sleep(time.Duration(1/2)*time.Second)
	}

}
